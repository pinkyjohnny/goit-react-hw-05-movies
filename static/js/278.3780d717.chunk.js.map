{"version":3,"file":"static/js/278.3780d717.chunk.js","mappings":"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","sources":["pages/Movies/Movies.jsx","pages/TrendMovies/TrendMovies.jsx","services/api.js"],"sourcesContent":["import {\n  StyledMovieLink,\n  StyledTrendlist,\n} from 'pages/TrendMovies/TrendMovies';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByQuery } from 'services/api';\nimport styled from 'styled-components';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [foundMovies, setFoundMovies] = useState();\n  const [q, setQ] = useState();\n  const location = useLocation();\n\n  const query = searchParams.get('query') || '';\n\n  const handleChangeParams = e => {\n    setQ(e.target.value);\n  };\n\n  const handleSetQuery = e => {\n    e.preventDefault();\n    setSearchParams(q ? { query: q } : {});\n  };\n\n  useEffect(() => {\n    fetchMoviesByQuery({ query }).then(data => setFoundMovies(data));\n    setQ('');\n  }, [query]);\n\n  return (\n    <div>\n      <StyledForm onSubmit={handleSetQuery}>\n        <StyledInput\n          type=\"search\"\n          onChange={handleChangeParams}\n          placeholder=\"Movie name\"\n        />\n        <StyledButton>Search</StyledButton>\n      </StyledForm>\n\n      <StyledTrendlist>\n        {foundMovies?.map(movie => (\n          <li key={movie.id}>\n            <StyledMovieLink\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n            >\n              {movie.title ?? movie.name ?? movie.original_name}\n            </StyledMovieLink>\n          </li>\n        ))}\n      </StyledTrendlist>\n    </div>\n  );\n};\n\nexport default Movies;\n\nconst StyledInput = styled.input`\n  border-radius: 10px;\n  padding: 8px 5px;\n  width: 300px;\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  gap: 15px;\n`;\n\nconst StyledButton = styled.button`\n  align-items: center;\n  gap: 10px;\n  padding: 5px;\n  border-radius: 10px;\n  border-color: transparent;\n  text-decoration: none;\n  color: black;\n  background-color: rgba(80, 36, 120, 0.715);\n  color: white;\n  cursor: pointer;\n\n  &.active {\n    background-color: rgb(197, 9, 197);\n    color: white;\n  }\n  &:hover:not(.active) {\n    background-color: rgb(197, 9, 197);\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { fetchTrendMovies } from 'services/api';\nimport styled from 'styled-components';\n\nconst TrendMovies = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchTrendMovies().then(data => setTrendMovies(data));\n  }, []);\n  return (\n    <div>\n      <StyledTrendlist>\n        {trendMovies.map(movie => (\n          <li key={movie.id}>\n            <StyledMovieLink\n              state={{ from: location }}\n              to={`/movies/${movie.id}`}\n            >\n              {movie.title ?? movie.name ?? movie.original_name}\n            </StyledMovieLink>\n          </li>\n        ))}\n      </StyledTrendlist>\n    </div>\n  );\n};\n\nexport default TrendMovies;\n\nexport const StyledTrendlist = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const StyledMovieLink = styled(NavLink)`\n  font-weight: 700;\n  font-size: 30px;\n  color: rgb(141, 40, 172);\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '969d853c55077b4ad76dadf5dc4c9966';\n\nexport const fetchTrendMovies = async params => {\n    const { data } = await axios.get('trending/all/day', {\n        params: {\n            api_key: API_KEY,\n        }\n\n    });\n    return data.results;\n};\n\n\nexport const fetchMoviesById = async id => {\n    const { data } = await axios.get(`movie/${id}`, {\n        params: {\n            api_key: API_KEY,\n        }\n\n    });\n    return data\n}\n\nexport const fetchCastById = async id => {\n    const { data } = await axios.get(`movie/${id}/credits`,\n        {\n            params: {\n                api_key: API_KEY,\n            }\n        }\n\n    )\n    return data.cast\n}\n\nexport const fetchReviewsById = async id => {\n    const { data } = await axios.get(`movie/${id}/reviews`,\n        {\n            params: {\n                api_key: API_KEY,\n            }\n        }\n\n    )\n    return data.results\n}\n\nexport const fetchMoviesByQuery = async params => {\n    const { data } = await axios.get(`search/movie`,\n        {\n            params: {\n                api_key: API_KEY,\n                ...params,\n            }\n        }\n\n    )\n    return data.results\n}"],"names":["Movies","searchParams","setSearchParams","useSearchParams","foundMovies","setFoundMovies","useState","q","setQ","location","useLocation","query","get","useEffect","fetchMoviesByQuery","then","data","_jsxs","children","StyledForm","onSubmit","e","preventDefault","_jsx","StyledInput","type","onChange","target","value","placeholder","StyledButton","StyledTrendlist","map","movie","_ref","_movie$title","StyledMovieLink","to","concat","id","state","from","title","name","original_name","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","TrendMovies","trendMovies","setTrendMovies","fetchTrendMovies","NavLink","axios","API_KEY","async","params","api_key","results","fetchMoviesById","fetchCastById","cast","fetchReviewsById"],"sourceRoot":""}