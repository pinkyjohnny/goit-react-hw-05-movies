{"version":3,"file":"static/js/115.6eb7ce1d.chunk.js","mappings":"0NAKA,MA+BA,EA/BaA,KACX,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,OACbC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAKjC,OAHAC,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,IAAcN,GAASO,MAAKC,GAAQL,EAAQK,IAAM,GACjD,CAACR,KAEFS,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACE,EAAU,CAAAD,SACJ,OAAJR,QAAI,IAAJA,OAAI,EAAJA,EAAMU,KAAIC,IACTC,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACED,EAAAA,EAAAA,KAAA,OACEM,IACEF,EAAMG,aAAY,mCAAAC,OACqBJ,EAAMG,cACzC,GAENE,IAAKL,EAAMM,KACXC,MAAM,MACNC,OAAO,SAETZ,EAAAA,EAAAA,KAAA,MAAAC,SAAKG,EAAMM,QACXL,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CAAG,cAAYG,EAAMS,eAZdT,EAAMU,SAgBf,EAMJZ,EAAaa,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6D,mFCpC5BC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,MAAMC,EAAU,mCAEHC,EAAmBC,UAC5B,MAAM,KAAEtB,SAAemB,EAAAA,EAAAA,IAAU,mBAAoB,CACjDI,OAAQ,CACJC,QAASJ,KAIjB,OAAOpB,EAAKyB,OAAO,EAIVC,EAAkBJ,UAC3B,MAAM,KAAEtB,SAAemB,EAAAA,EAAAA,IAAU,SAADV,OAAUM,GAAM,CAC5CQ,OAAQ,CACJC,QAASJ,KAIjB,OAAOpB,CAAI,EAGFF,EAAgBwB,UACzB,MAAM,KAAEtB,SAAemB,EAAAA,EAAAA,IAAU,SAADV,OAAUM,EAAE,YACxC,CACIQ,OAAQ,CACJC,QAASJ,KAKrB,OAAOpB,EAAKN,IAAI,EAGPiC,EAAmBL,UAC5B,MAAM,KAAEtB,SAAemB,EAAAA,EAAAA,IAAU,SAADV,OAAUM,EAAE,YACxC,CACIQ,OAAQ,CACJC,QAASJ,KAKrB,OAAOpB,EAAKyB,OAAO,EAGVG,EAAqBN,UAC9B,MAAM,KAAEtB,SAAemB,EAAAA,EAAAA,IAAU,eAC7B,CACII,OAAQ,CACJC,QAASJ,KACNG,KAKf,OAAOvB,EAAKyB,OAAO,C","sources":["pages/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCastById } from 'services/api';\nimport styled from 'styled-components';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchCastById(movieId).then(data => setCast(data));\n  }, [movieId]);\n  return (\n    <div>\n      <StyledList>\n        {cast?.map(actor => (\n          <li key={actor.id}>\n            <img\n              src={\n                actor.profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n                  : ''\n              }\n              alt={actor.name}\n              width=\"140\"\n              height=\"200\"\n            />\n            <h3>{actor.name}</h3>\n            <p>Character: {actor.character}</p>\n          </li>\n        ))}\n      </StyledList>\n    </div>\n  );\n};\n\nexport default Cast;\n\nconst StyledList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 24px;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '969d853c55077b4ad76dadf5dc4c9966';\n\nexport const fetchTrendMovies = async params => {\n    const { data } = await axios.get('trending/all/day', {\n        params: {\n            api_key: API_KEY,\n        }\n\n    });\n    return data.results;\n};\n\n\nexport const fetchMoviesById = async id => {\n    const { data } = await axios.get(`movie/${id}`, {\n        params: {\n            api_key: API_KEY,\n        }\n\n    });\n    return data\n}\n\nexport const fetchCastById = async id => {\n    const { data } = await axios.get(`movie/${id}/credits`,\n        {\n            params: {\n                api_key: API_KEY,\n            }\n        }\n\n    )\n    return data.cast\n}\n\nexport const fetchReviewsById = async id => {\n    const { data } = await axios.get(`movie/${id}/reviews`,\n        {\n            params: {\n                api_key: API_KEY,\n            }\n        }\n\n    )\n    return data.results\n}\n\nexport const fetchMoviesByQuery = async params => {\n    const { data } = await axios.get(`search/movie`,\n        {\n            params: {\n                api_key: API_KEY,\n                ...params,\n            }\n        }\n\n    )\n    return data.results\n}"],"names":["Cast","movieId","useParams","cast","setCast","useState","useEffect","fetchCastById","then","data","_jsx","children","StyledList","map","actor","_jsxs","src","profile_path","concat","alt","name","width","height","character","id","styled","_templateObject","_taggedTemplateLiteral","axios","API_KEY","fetchTrendMovies","async","params","api_key","results","fetchMoviesById","fetchReviewsById","fetchMoviesByQuery"],"sourceRoot":""}