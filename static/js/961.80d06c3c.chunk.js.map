{"version":3,"file":"static/js/961.80d06c3c.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import React, { Suspense, useEffect, useRef, useState } from 'react';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMoviesById } from 'services/api';\nimport styled from 'styled-components';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const goBackRef = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    fetchMoviesById(movieId).then(data => setMovie(data));\n  }, [movieId]);\n\n  if (!movie) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n    <Container>\n      <StyledButton to={goBackRef.current}>Go back</StyledButton>\n      <StyledWrapper>\n        <div>\n          <img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w342${movie.poster_path}`\n                : ''\n            }\n            alt=\"movie.original_title\"\n            width=\"342\"\n            style={{ marginTop: 12 }}\n          />\n        </div>\n        <StyledSideContainer>\n          <StyledTitle>\n            {movie.title ?? movie.name ?? movie.original_name}\n          </StyledTitle>\n          <h3>Rate: {Math.round(movie.vote_average * 100) / 100}/10</h3>\n          <h3>Release: {movie.release_date.slice(0, 4)}</h3>\n          <h3>Genres: {movie.genres?.map(genre => genre.name).join(', ')}</h3>\n          <p>{movie.overview}</p>\n          <StyledButton to=\"cast\">Cast</StyledButton>\n          <StyledButton to=\"reviews\" style={{ marginLeft: 12 }}>\n            Reviews\n          </StyledButton>\n        </StyledSideContainer>\n      </StyledWrapper>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n\nconst StyledTitle = styled.h1`\n  font-family: fantasy;\n`;\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n\nconst StyledSideContainer = styled.div`\n  margin-left: 100px;\n  margin-top: 130px;\n`;\n\nconst Container = styled.div`\n  padding: 0 0;\n`;\n\nconst StyledButton = styled(NavLink)`\n  align-items: center;\n  gap: 10px;\n  padding: 5px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  background-color: rgba(80, 36, 120, 0.715);\n  color: white;\n\n  &.active {\n    background-color: rgb(197, 9, 197);\n    color: white;\n  }\n  &:hover:not(.active) {\n    background-color: rgb(197, 9, 197);\n  }\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '969d853c55077b4ad76dadf5dc4c9966';\n\nexport const fetchTrendMovies = async params => {\n    const { data } = await axios.get('trending/all/day', {\n        params: {\n            api_key: API_KEY,\n        }\n\n    });\n    return data.results;\n};\n\n\nexport const fetchMoviesById = async id => {\n    const { data } = await axios.get(`movie/${id}`, {\n        params: {\n            api_key: API_KEY,\n        }\n\n    });\n    return data\n}\n\nexport const fetchCastById = async id => {\n    const { data } = await axios.get(`movie/${id}/credits`,\n        {\n            params: {\n                api_key: API_KEY,\n            }\n        }\n\n    )\n    return data.cast\n}\n\nexport const fetchReviewsById = async id => {\n    const { data } = await axios.get(`movie/${id}/reviews`,\n        {\n            params: {\n                api_key: API_KEY,\n            }\n        }\n\n    )\n    return data.results\n}\n\nexport const fetchMoviesByQuery = async params => {\n    const { data } = await axios.get(`search/movie`,\n        {\n            params: {\n                api_key: API_KEY,\n                ...params,\n            }\n        }\n\n    )\n    return data.results\n}"],"names":["MovieDetails","_location$state","_ref","_movie$title","_movie$genres","movieId","useParams","movie","setMovie","useState","location","useLocation","goBackRef","useRef","state","from","useEffect","fetchMoviesById","then","data","_jsxs","Container","children","_jsx","StyledButton","to","current","StyledWrapper","src","poster_path","concat","alt","width","style","marginTop","StyledSideContainer","StyledTitle","title","name","original_name","Math","round","vote_average","release_date","slice","genres","map","genre","join","overview","marginLeft","Suspense","Outlet","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","NavLink","_templateObject5","axios","API_KEY","fetchTrendMovies","async","params","api_key","results","id","fetchCastById","cast","fetchReviewsById","fetchMoviesByQuery"],"sourceRoot":""}